{"version": "0.9.5", "fields": ["qualname", "fullname", "doc"], "ref": "fullname", "documentStore": {"docs": {"pyUnpackQA": {"fullname": "pyUnpackQA", "modulename": "pyUnpackQA", "qualname": "", "type": "module", "doc": "<p></p>\n"}, "pyUnpackQA.list_sensors": {"fullname": "pyUnpackQA.list_sensors", "modulename": "pyUnpackQA", "qualname": "list_sensors", "type": "function", "doc": "<p>Return a list of available sensors configured in the package.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list</strong>: List of sensor names</li>\n</ul>\n", "parameters": [], "funcdef": "def"}, "pyUnpackQA.list_products": {"fullname": "pyUnpackQA.list_products", "modulename": "pyUnpackQA", "qualname": "list_products", "type": "function", "doc": "<p>Return a list of available products for QA unpacking. \n'all', the default, returns the identifers for all products\nfor all sensors</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sensor</strong> (int, optional):\nSensor ID. The default is 'all'.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list</strong>: List of product identifers</li>\n</ul>\n", "parameters": ["sensor"], "funcdef": "def"}, "pyUnpackQA.list_qa_flags": {"fullname": "pyUnpackQA.list_qa_flags", "modulename": "pyUnpackQA", "qualname": "list_qa_flags", "type": "function", "doc": "<p>Return a list of QA flags configured for a specific product.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>product</strong> (str):\nA unique product identifer. See <code>list_products()</code> for availability.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list</strong>: List of QA flags. The descripters are used in the flag argument\nof <code>unpack_to_array()</code> and <code>unpack_to_dict()</code>.</li>\n</ul>\n", "parameters": ["product"], "funcdef": "def"}, "pyUnpackQA.unpack_to_array": {"fullname": "pyUnpackQA.unpack_to_array", "modulename": "pyUnpackQA", "qualname": "unpack_to_array", "type": "function", "doc": "<p>Make a mask array with the same shape as qa with an additional axis\nfor all flag masks.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>qa</strong> (np.array or int):\nAn array of any shape with an int-like dtype. If a single integer \nit will be coverted to a numpy array with length 1.</li>\n<li><strong>product</strong> (str):\nA unique product identifer. See <code>list_products()</code> for availability.</li>\n<li><strong>flags</strong> (list of strings or 'all', optional):\nList of flags to return. If 'all', the default, then all available\nflags are returned in the array. See available flags for each \nproduct with <code>list_qa_flags()</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.array</strong>: If only a single flag is set then the array shape will be the same\nas qa.shape. If &gt; 1 flag is set then an axis will be added in \nposition -1, with the shape as qa.shape + (n_flags,)\nOrdering of the flag axis will be the same order of the <code>flags</code> \nlist argument. \nIf <code>flags</code> is 'all' then the order is the same as that in \n<code>available_qa_flags</code>, which are be aligned with the flag bit order.</li>\n</ul>\n", "parameters": ["qa", "product", "flags"], "funcdef": "def"}, "pyUnpackQA.unpack_to_dict": {"fullname": "pyUnpackQA.unpack_to_dict", "modulename": "pyUnpackQA", "qualname": "unpack_to_dict", "type": "function", "doc": "<p>Get mask arrays for the specified flags in a dictionary format.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>qa</strong> (np.array or int):\nAn array of any shape with an int-like dtype. If a single integer \nit will be coverted to a numpy array with length 1.</li>\n<li><strong>product</strong> (str):\nA unique product identifer. See <code>list_products()</code> for availability.</li>\n<li><strong>flags</strong> (list of strings or 'all', optional):\nList of flags to return. If 'all', the default, then all available\nflags are returned in the array. See available flags for each \nproduct with <code>list_qa_flags()</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: A dictionary where the flag names are keys and values are np.arrays\nof the flag mask with shape qa.shape. All entries will have the\nsame shape.</li>\n</ul>\n", "parameters": ["qa", "product", "flags"], "funcdef": "def"}}, "docInfo": {"pyUnpackQA": {"qualname": 0, "fullname": 1, "doc": 0}, "pyUnpackQA.list_sensors": {"qualname": 1, "fullname": 2, "doc": 11}, "pyUnpackQA.list_products": {"qualname": 1, "fullname": 2, "doc": 23}, "pyUnpackQA.list_qa_flags": {"qualname": 1, "fullname": 2, "doc": 27}, "pyUnpackQA.unpack_to_array": {"qualname": 1, "fullname": 2, "doc": 91}, "pyUnpackQA.unpack_to_dict": {"qualname": 1, "fullname": 2, "doc": 65}}, "length": 6, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_products": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "a": {"docs": {"pyUnpackQA": {"tf": 1}, "pyUnpackQA.list_sensors": {"tf": 1}, "pyUnpackQA.list_products": {"tf": 1}, "pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 6}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_products": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "doc": {"root": {"1": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1.4142135623730951}, "pyUnpackQA.list_products": {"tf": 1.7320508075688772}, "pyUnpackQA.list_qa_flags": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_array": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_dict": {"tf": 1.7320508075688772}}, "df": 5}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1.7320508075688772}, "pyUnpackQA.list_products": {"tf": 1.7320508075688772}, "pyUnpackQA.list_qa_flags": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_array": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_dict": {"tf": 1.4142135623730951}}, "df": 5, "_": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1}, "pyUnpackQA.list_products": {"tf": 1}, "pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_dict": {"tf": 1.7320508075688772}}, "df": 5, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 2.6457513110645907}, "pyUnpackQA.unpack_to_dict": {"tf": 2.449489742783178}}, "df": 2}}}}, "d": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1.7320508075688772}}, "df": 1}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1.4142135623730951}, "pyUnpackQA.list_products": {"tf": 1.7320508075688772}}, "df": 2}}}}, "e": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_dict": {"tf": 1.4142135623730951}}, "df": 3}, "t": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 1, "i": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 2}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 2.449489742783178}, "pyUnpackQA.unpack_to_dict": {"tf": 2}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1}, "pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_products": {"tf": 1}, "pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_products": {"tf": 1.7320508075688772}, "pyUnpackQA.list_qa_flags": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_array": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_dict": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyUnpackQA.list_sensors": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_dict": {"tf": 1.4142135623730951}}, "df": 2}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}, "_": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "a": {"docs": {"pyUnpackQA.list_products": {"tf": 1}, "pyUnpackQA.list_qa_flags": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_array": {"tf": 2}, "pyUnpackQA.unpack_to_dict": {"tf": 1.4142135623730951}}, "df": 4}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyUnpackQA.list_products": {"tf": 1}}, "df": 1, "_": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "_": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_products": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyUnpackQA.list_products": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {"pyUnpackQA.list_products": {"tf": 1.4142135623730951}, "pyUnpackQA.list_qa_flags": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 4}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.list_products": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_dict": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyUnpackQA.list_products": {"tf": 1}, "pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 2}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyUnpackQA.list_qa_flags": {"tf": 1.7320508075688772}, "pyUnpackQA.unpack_to_array": {"tf": 3.3166247903554}, "pyUnpackQA.unpack_to_dict": {"tf": 2.6457513110645907}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1.4142135623730951}, "pyUnpackQA.unpack_to_dict": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}, "pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyUnpackQA.unpack_to_array": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {"pyUnpackQA.unpack_to_dict": {"tf": 1}}, "df": 1}}}}}}}, "pipeline": ["trimmer", "stopWordFilter", "stemmer"], "_isPrebuiltIndex": true}