{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pyUnpackQA Methods for unpacking all common remote sensing QA bands which are stored in bit-wise values. Works with single QA values, 1D arrays (eg. time series), or 2D arrays (full scenes). The same methods are used for all sensors, with specific product flags specified via arguments. No file reading or writing. numpy is the only dependecy. Installaion Install via pip directly from the github repo: pip install git+git://github.com/sdtaylor/pyUnpackQA","title":"About"},{"location":"#pyunpackqa","text":"Methods for unpacking all common remote sensing QA bands which are stored in bit-wise values. Works with single QA values, 1D arrays (eg. time series), or 2D arrays (full scenes). The same methods are used for all sensors, with specific product flags specified via arguments. No file reading or writing. numpy is the only dependecy.","title":"pyUnpackQA"},{"location":"#installaion","text":"Install via pip directly from the github repo: pip install git+git://github.com/sdtaylor/pyUnpackQA","title":"Installaion"},{"location":"API/","text":"The package is structured such that a class is loaded for each QA band. For example the Landsat 8 Collection 2 Level 2 QA_PIXEL band is process via import numpy as np from pyUnpackQA.Landsat import L8C2L2_QAPixel L8 = L8C2L2_QAPixel() For any product there are 3 methods available. Listing available flags available_qa_flags() This lists the flags which are parsed from the QA bits. These match the Flag Name column in the product list tables. Unpacking to an array unpack_to_array(qa, flags='all') This will return the QA values of a numpy array or integer. The returned value will have an entry for all flags listed in the flags argument. By default 'flags' is all which will return all flags listed in available_qa_flags() . L8.unpack_to_array(21284) array([[0, 0, 1, 0, 0, 1, 0, 0, 3, 0, 1, 1]], dtype=uint8) qa_array = np.array([[21284,0],[21284,0]]) qa_array.shape (2,2) L8.unpack_to_array(qa_array).shape (2,2,12) Unpacking to a dictionary unpack_to_dict(qa, flags='all') This is similar to unpack_to_array , but instead of a stacked array for all flags, it returns a dictionary where the keys are the flag names, and the value for each key is the flag array. The shape of each array is the same as the input qa.shape. This is usefull when single pixels or time series of pixels are being used, as this can be put directly into a pandas DataFrame. qa_array = np.array([56598, 56598,0,0,56598]) L8.unpack_to_dict(qa_array) {'Fill': array([0, 0, 0, 0, 0], dtype=uint8), 'Dilated Cloud': array([1, 1, 0, 0, 1], dtype=uint8), 'Cirrus': array([1, 1, 0, 0, 1], dtype=uint8), 'Cloud': array([0, 0, 0, 0, 0], dtype=uint8), 'Cloud Shadow': array([1, 1, 0, 0, 1], dtype=uint8), 'Snow': array([0, 0, 0, 0, 0], dtype=uint8), 'Clear': array([0, 0, 0, 0, 0], dtype=uint8), 'Water': array([0, 0, 0, 0, 0], dtype=uint8), 'Cloud Confidence': array([1, 1, 0, 0, 1], dtype=uint8), 'Cloud Shadow Confidence': array([3, 3, 0, 0, 3], dtype=uint8), 'Snow/Ice Confidence': array([1, 1, 0, 0, 1], dtype=uint8), 'Cirrus Confidence': array([3, 3, 0, 0, 3], dtype=uint8)} L8.unpack_to_dict(qa_array)['Cloud'].shape (5,)","title":"API"},{"location":"API/#listing-available-flags","text":"available_qa_flags() This lists the flags which are parsed from the QA bits. These match the Flag Name column in the product list tables.","title":"Listing available flags"},{"location":"API/#unpacking-to-an-array","text":"unpack_to_array(qa, flags='all') This will return the QA values of a numpy array or integer. The returned value will have an entry for all flags listed in the flags argument. By default 'flags' is all which will return all flags listed in available_qa_flags() . L8.unpack_to_array(21284) array([[0, 0, 1, 0, 0, 1, 0, 0, 3, 0, 1, 1]], dtype=uint8) qa_array = np.array([[21284,0],[21284,0]]) qa_array.shape (2,2) L8.unpack_to_array(qa_array).shape (2,2,12)","title":"Unpacking to an array"},{"location":"API/#unpacking-to-a-dictionary","text":"unpack_to_dict(qa, flags='all') This is similar to unpack_to_array , but instead of a stacked array for all flags, it returns a dictionary where the keys are the flag names, and the value for each key is the flag array. The shape of each array is the same as the input qa.shape. This is usefull when single pixels or time series of pixels are being used, as this can be put directly into a pandas DataFrame. qa_array = np.array([56598, 56598,0,0,56598]) L8.unpack_to_dict(qa_array) {'Fill': array([0, 0, 0, 0, 0], dtype=uint8), 'Dilated Cloud': array([1, 1, 0, 0, 1], dtype=uint8), 'Cirrus': array([1, 1, 0, 0, 1], dtype=uint8), 'Cloud': array([0, 0, 0, 0, 0], dtype=uint8), 'Cloud Shadow': array([1, 1, 0, 0, 1], dtype=uint8), 'Snow': array([0, 0, 0, 0, 0], dtype=uint8), 'Clear': array([0, 0, 0, 0, 0], dtype=uint8), 'Water': array([0, 0, 0, 0, 0], dtype=uint8), 'Cloud Confidence': array([1, 1, 0, 0, 1], dtype=uint8), 'Cloud Shadow Confidence': array([3, 3, 0, 0, 3], dtype=uint8), 'Snow/Ice Confidence': array([1, 1, 0, 0, 1], dtype=uint8), 'Cirrus Confidence': array([3, 3, 0, 0, 3], dtype=uint8)} L8.unpack_to_dict(qa_array)['Cloud'].shape (5,)","title":"Unpacking to a dictionary"},{"location":"Landsat/","text":"L8C2L2_QAPixel Landsat 8 Collection 2 Level 2 QA Pixel unpacking. from pyUnpackQA.Landsat import L8C2L2_QAPixel Bits Flag Name Descriptions 0 Fill 0 - for image data 1 - for fill data 1 Dilated Cloud 0 - for cloud is not dilated or no cloud 1 - for cloud dilation 2 Cirrus 0 - for Cirrus Confidence: no confidence level set or Low Confidence 1 - for high confidence cirrus 3 Cloud 0 - for cloud confidence is not high 1 - for high confidence cloud 4 Cloud Shadow 0 - for Cloud Shadow Confidence is not high 1 - for high confidence cloud shadow 5 Snow 0 - for Snow/Ice Confidence is not high 1 - for high confidence snow cover 6 Clear 0 - if Cloud or Dilated Cloud bits are set 1 - if Cloud and Dilated Cloud bits are not set 7 Water 0 - for land or cloud 1 - for water 8-9 Cloud Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence 10-11 Cloud Shadow Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence 12-13 Snow/Ice Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence 14-15 Cirrus Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence References docs LSDS-1328 Version 6.0, September 2020 Confirmed products Google Earth Engine: LANDSAT/LC08/C02/T1_L2 L8C2L2_QARADSAT Landsat 8 Collection 2 Level 2 QA RADSAT unpacking. aka. Radiometric Saturation and Terrain Occlusion QA from pyUnpackQA.Landsat import L8C2L2_QARADSAT Bits Flag Name Descriptions 0 Band 1 Data Saturation 0 - no saturation 1 - saturated data 1 Band 2 Data Saturation 0 - no saturation 1 - saturated data 2 Band 3 Data Saturation 0 - no saturation 1 - saturated data 3 Band 4 Data Saturation 0 - no saturation 1 - saturated data 4 Band 5 Data Saturation 0 - no saturation 1 - saturated data 5 Band 6 Data Saturation 0 - no saturation 1 - saturated data 6 Band 7 Data Saturation 0 - no saturation 1 - saturated data 7 Unused 8 Band 9 Data Saturation 0 - no saturation 1 - saturated data 9 Unused 10 Unused 11 Terrain occlusion 0 - no terrain occlusion 1 - terrain occlusion 12-15 Unused References docs LSDS-1328 Version 6.0, September 2020 Confirmed products Google Earth Engine: LANDSAT/LC08/C02/T1_L2","title":"Landsat"},{"location":"Landsat/#l8c2l2_qapixel","text":"Landsat 8 Collection 2 Level 2 QA Pixel unpacking. from pyUnpackQA.Landsat import L8C2L2_QAPixel Bits Flag Name Descriptions 0 Fill 0 - for image data 1 - for fill data 1 Dilated Cloud 0 - for cloud is not dilated or no cloud 1 - for cloud dilation 2 Cirrus 0 - for Cirrus Confidence: no confidence level set or Low Confidence 1 - for high confidence cirrus 3 Cloud 0 - for cloud confidence is not high 1 - for high confidence cloud 4 Cloud Shadow 0 - for Cloud Shadow Confidence is not high 1 - for high confidence cloud shadow 5 Snow 0 - for Snow/Ice Confidence is not high 1 - for high confidence snow cover 6 Clear 0 - if Cloud or Dilated Cloud bits are set 1 - if Cloud and Dilated Cloud bits are not set 7 Water 0 - for land or cloud 1 - for water 8-9 Cloud Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence 10-11 Cloud Shadow Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence 12-13 Snow/Ice Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence 14-15 Cirrus Confidence 0 - for no confidence level set 1 - Low confidence 2 - Medium confidence 3 - High confidence","title":"L8C2L2_QAPixel"},{"location":"Landsat/#references-docs","text":"LSDS-1328 Version 6.0, September 2020","title":"References docs"},{"location":"Landsat/#confirmed-products","text":"Google Earth Engine: LANDSAT/LC08/C02/T1_L2","title":"Confirmed products"},{"location":"Landsat/#l8c2l2_qaradsat","text":"Landsat 8 Collection 2 Level 2 QA RADSAT unpacking. aka. Radiometric Saturation and Terrain Occlusion QA from pyUnpackQA.Landsat import L8C2L2_QARADSAT Bits Flag Name Descriptions 0 Band 1 Data Saturation 0 - no saturation 1 - saturated data 1 Band 2 Data Saturation 0 - no saturation 1 - saturated data 2 Band 3 Data Saturation 0 - no saturation 1 - saturated data 3 Band 4 Data Saturation 0 - no saturation 1 - saturated data 4 Band 5 Data Saturation 0 - no saturation 1 - saturated data 5 Band 6 Data Saturation 0 - no saturation 1 - saturated data 6 Band 7 Data Saturation 0 - no saturation 1 - saturated data 7 Unused 8 Band 9 Data Saturation 0 - no saturation 1 - saturated data 9 Unused 10 Unused 11 Terrain occlusion 0 - no terrain occlusion 1 - terrain occlusion 12-15 Unused","title":"L8C2L2_QARADSAT"},{"location":"Landsat/#references-docs_1","text":"LSDS-1328 Version 6.0, September 2020","title":"References docs"},{"location":"Landsat/#confirmed-products_1","text":"Google Earth Engine: LANDSAT/LC08/C02/T1_L2","title":"Confirmed products"},{"location":"MODIS/","text":"MOD13Q1v006_DetailedQA MODIS/Terra Vegetation Indices 16-Day L3 Global 250m from pyUnpackQA.MODIS import MOD13Q1v006_DetailedQA Bits Flag Name Descriptions 0-1 VI Quality 0 - VI produced with good quality 1 - VI produced, but check other QA 2 - Pixel produced, but most probably cloudy 3 - Pixel not produced due to other reasons than clouds 2-5 VI Usefulness 0 - Highest quality 1 - Lower quality 2 - Decreasing quality 3 - Decreasing quality 4 - Decreasing quality 5 - Decreasing quality 6 - Decreasing quality 7 - Lowest quality 8 - Quality so low that it is not useful 9 - L1B data faulty 10 - Not useful for any other reason/not processed 6-7 Aerosol Quantity 0 - Climatology 1 - Low 2 - Intermediate 3 - High 8 Adjacent cloud detected 0 - No 1 - Yes 9 Atmosphere BRDF Correction 0 - No 1 - Yes 10 Mixed Clouds 0 - No 1 - Yes 11-13 Land/Water Mask 0 - Shallow ocean 1 - Land (Nothing else but land) 2 - Ocean coastlines and lake shorelines 3 - Shallow inland water 4 - Ephemeral water 5 - Deep inland water 6 - Moderate or continental ocean 7 - Deep ocean 14 Possible snow/ice 0 - No 1 - Yes 15 Possible shadow 0 - No 1 - Yes References docs MODIS Vegetation Index User\u2019s Guide (MOD13 Series) Version 3.00, June 2015 (Collection 6) https://lpdaac.usgs.gov/products/mod13q1v006/ Confirmed products Google Earth Engine: MODIS/006/MOD13Q1 MOD13A1v006_DetailedQA MODIS/Terra Vegetation Indices 16-Day L3 Global 500m from pyUnpackQA.MODIS import MOD13A1v006_DetailedQA The flag descriptions here are the same as in MOD13Q1v006_DetailedQA References docs MODIS Vegetation Index User\u2019s Guide (MOD13 Series) Version 3.00, June 2015 (Collection 6) https://lpdaac.usgs.gov/products/mod13q1v006/ Confirmed products Google Earth Engine: MODIS/006/MOD13A1","title":"MODIS"},{"location":"MODIS/#mod13q1v006_detailedqa","text":"MODIS/Terra Vegetation Indices 16-Day L3 Global 250m from pyUnpackQA.MODIS import MOD13Q1v006_DetailedQA Bits Flag Name Descriptions 0-1 VI Quality 0 - VI produced with good quality 1 - VI produced, but check other QA 2 - Pixel produced, but most probably cloudy 3 - Pixel not produced due to other reasons than clouds 2-5 VI Usefulness 0 - Highest quality 1 - Lower quality 2 - Decreasing quality 3 - Decreasing quality 4 - Decreasing quality 5 - Decreasing quality 6 - Decreasing quality 7 - Lowest quality 8 - Quality so low that it is not useful 9 - L1B data faulty 10 - Not useful for any other reason/not processed 6-7 Aerosol Quantity 0 - Climatology 1 - Low 2 - Intermediate 3 - High 8 Adjacent cloud detected 0 - No 1 - Yes 9 Atmosphere BRDF Correction 0 - No 1 - Yes 10 Mixed Clouds 0 - No 1 - Yes 11-13 Land/Water Mask 0 - Shallow ocean 1 - Land (Nothing else but land) 2 - Ocean coastlines and lake shorelines 3 - Shallow inland water 4 - Ephemeral water 5 - Deep inland water 6 - Moderate or continental ocean 7 - Deep ocean 14 Possible snow/ice 0 - No 1 - Yes 15 Possible shadow 0 - No 1 - Yes","title":"MOD13Q1v006_DetailedQA"},{"location":"MODIS/#references-docs","text":"MODIS Vegetation Index User\u2019s Guide (MOD13 Series) Version 3.00, June 2015 (Collection 6) https://lpdaac.usgs.gov/products/mod13q1v006/","title":"References docs"},{"location":"MODIS/#confirmed-products","text":"Google Earth Engine: MODIS/006/MOD13Q1","title":"Confirmed products"},{"location":"MODIS/#mod13a1v006_detailedqa","text":"MODIS/Terra Vegetation Indices 16-Day L3 Global 500m from pyUnpackQA.MODIS import MOD13A1v006_DetailedQA The flag descriptions here are the same as in MOD13Q1v006_DetailedQA","title":"MOD13A1v006_DetailedQA"},{"location":"MODIS/#references-docs_1","text":"MODIS Vegetation Index User\u2019s Guide (MOD13 Series) Version 3.00, June 2015 (Collection 6) https://lpdaac.usgs.gov/products/mod13q1v006/","title":"References docs"},{"location":"MODIS/#confirmed-products_1","text":"Google Earth Engine: MODIS/006/MOD13A1","title":"Confirmed products"},{"location":"product_list/","text":"Products Landsat MODIS Sentinal2","title":"Product List"},{"location":"product_list/#products","text":"Landsat MODIS Sentinal2","title":"Products"}]}